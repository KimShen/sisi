<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<bean id="presence.pro.muc.check.xmlns" class="com.sissi.pipeline.in.presence.muc.PresenceMucCheckXmlnsProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.muc.check.maxusers" class="com.sissi.pipeline.in.presence.muc.PresenceMucCheckMaxUsersProcessor" parent="global.pro.proxy">
		<constructor-arg index="0" value="${ucenter.muc.maxuser}" />
		<constructor-arg ref="ucenter.muc.room" />
	</bean>
	<bean id="presence.pro.muc.check.password" class="com.sissi.pipeline.in.presence.muc.PresenceMucCheckPasswordProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.room" />
	</bean>
	<bean id="presence.pro.muc.check.activate" class="com.sissi.pipeline.in.presence.muc.PresenceMucCheckActivateProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.room" />
	</bean>
	<bean id="presence.pro.muc.check.affiliation" class="com.sissi.pipeline.in.presence.muc.PresenceMucCheckAffiliationProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.room" />
	</bean>
	<bean id="presence.pro.muc.check.relation" class="com.sissi.pipeline.in.presence.muc.PresenceMucCheckRelationProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.relation.mapping" />
	</bean>
	<alias name="global.pro.check.muc.outcast" alias="presence.pro.muc.check.outcast" />
	<bean id="presence.pro.muc.check.nickname.locked" class="com.sissi.pipeline.in.presence.muc.PresenceMucCheckNicknameLockedProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.room" />
	</bean>
	<bean id="presence.pro.muc.check.nickname.exists" class="com.sissi.pipeline.in.presence.muc.PresenceMucCheckNicknameExistsProcessor" parent="global.pro.proxy">
		<constructor-arg index="0" value="${ucenter.muc.multi}" />
		<constructor-arg ref="ucenter.muc.relation.mapping" />
	</bean>
	<bean id="presence.pro.muc.check.nickname.contains" class="com.sissi.pipeline.in.presence.muc.PresenceMucCheckNicknameContainsProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.muc.join" class="com.sissi.pipeline.in.presence.muc.PresenceMucJoinProcessor" parent="global.pro.proxy">
		<property name="relationContext" ref="ucenter.muc.relation.4role" />
	</bean>
	<bean id="presence.pro.muc.join.2fans" class="com.sissi.pipeline.in.presence.muc.PresenceMucJoin2FansProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.room" />
		<constructor-arg ref="ucenter.muc.status.adder.join" />
		<property name="relationContext" ref="ucenter.muc.relation.4role" />
	</bean>
	<bean id="presence.pro.muc.join.4fans" class="com.sissi.pipeline.in.presence.muc.PresenceMucJoin4FansProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.room" />
		<constructor-arg ref="ucenter.muc.status.adder.join" />
		<property name="relationContext" ref="ucenter.muc.relation.4role" />
	</bean>
	<bean id="presence.pro.muc.join.2replace" class="com.sissi.pipeline.in.presence.muc.PresenceMucJoin2ReplaceProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.room" />
		<constructor-arg ref="ucenter.muc.status.adder.replace" />
		<property name="relationContext" ref="ucenter.muc.relation.4role" />
	</bean>
	<bean id="presence.pro.muc.join.2self.message.warning" class="com.sissi.pipeline.in.presence.muc.PresenceMucJoin2SelfMessageWarningProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.room" />
		<constructor-arg value="${ucenter.muc.tip.anonymous}" />
	</bean>
	<bean id="presence.pro.muc.join.2self.message.history" class="com.sissi.pipeline.in.presence.muc.PresenceMucJoin2SelfMessageHistoryProcessor" parent="global.pro.proxy">
		<constructor-arg ref="persistent.recover" />
		<constructor-arg ref="ucenter.muc.room" />
	</bean>
	<bean id="presence.pro.muc.join.2self.message.subject" class="com.sissi.pipeline.in.presence.muc.PresenceMucJoin2SelfMessageSubjectProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.room" />
	</bean>
	<bean id="presence.pro.muc.join.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="presence.pro.muc.check.xmlns" />
				<ref bean="presence.pro.muc.check.nickname.contains" />
				<ref bean="presence.pro.muc.check.nickname.exists" />
				<ref bean="presence.pro.muc.check.nickname.locked" />
				<ref bean="presence.pro.muc.check.activate" />
				<ref bean="presence.pro.muc.check.outcast" />
				<ref bean="presence.pro.muc.check.password" />
				<ref bean="presence.pro.muc.check.maxusers" />
				<ref bean="presence.pro.muc.check.affiliation" />
				<ref bean="presence.pro.muc.join.2replace" />
				<ref bean="presence.pro.muc.join.2fans" />
				<ref bean="presence.pro.muc.join" />
				<ref bean="presence.pro.muc.join.4fans" />
				<ref bean="presence.pro.muc.join.2self.message.warning" />
				<ref bean="presence.pro.muc.join.2self.message.subject" />
				<ref bean="presence.pro.muc.join.2self.message.history" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="presence.pro.muc.leave" class="com.sissi.pipeline.in.presence.muc.PresenceMucLeaveProcessor" parent="global.pro.proxy">
		<property name="relationContext" ref="ucenter.muc.relation.4role" />
	</bean>
	<bean id="presence.pro.muc.leave.2fans" class="com.sissi.pipeline.in.presence.muc.PresenceMucLeave2FansProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.room" />
		<constructor-arg ref="ucenter.muc.status.adder.join" />
		<property name="relationContext" ref="ucenter.muc.relation.4role" />
	</bean>
	<bean id="presence.pro.muc.leave.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="presence.pro.muc.check.relation" />
				<ref bean="presence.pro.muc.leave.2fans" />
				<ref bean="presence.pro.muc.leave" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="presence.pro.muc.fork" class="com.sissi.pipeline.in.ForkProcessor">
		<constructor-arg ref="finder.presence.muc" />
	</bean>

	<bean id="finder.presence.muc" class="com.sissi.pipeline.in.ChainedFinder">
		<constructor-arg>
			<util:list>
				<ref bean="presence.condition.muc.available" />
				<ref bean="presence.condition.muc.unavailable" />
			</util:list>
		</constructor-arg>
	</bean>

	<bean id="presence.condition.muc" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg ref="presence.condition.muc.matcher" />
		<constructor-arg ref="presence.pro.muc.fork" />
	</bean>
	<bean id="presence.condition.muc.matcher" class="com.sissi.pipeline.in.MucMatcher">
		<constructor-arg ref="context.jid" />
		<constructor-arg index="0" value="com.sissi.protocol.presence.Presence" />
	</bean>
	<bean id="presence.condition.muc.available" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg ref="presence.condition.muc.available.matcher" />
		<constructor-arg ref="presence.pro.muc.join.chained" />
	</bean>
	<bean id="presence.condition.muc.available.matcher" class="com.sissi.pipeline.in.presence.PresenceMatcher">
		<constructor-arg value="true" />
		<constructor-arg>
			<array>
				<value>AVAILABLE</value>
			</array>
		</constructor-arg>
	</bean>
	<bean id="presence.condition.muc.unavailable" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg ref="presence.condition.muc.unavailable.matcher" />
		<constructor-arg ref="presence.pro.muc.leave.chained" />
	</bean>
	<bean id="presence.condition.muc.unavailable.matcher" class="com.sissi.pipeline.in.presence.PresenceMatcher">
		<constructor-arg value="true" />
		<constructor-arg>
			<array>
				<value>UNAVAILABLE</value>
			</array>
		</constructor-arg>
	</bean>
</beans>
