<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<bean id="muc.pro" class="com.sissi.pipeline.in.iq.muc.MucProcessor" parent="global.pro.proxy" />
	<bean id="muc.pro.check.jid" class="com.sissi.pipeline.in.iq.muc.MucCheckJIDProcessor" parent="global.pro.proxy" />
	<bean id="muc.pro.check.loop" class="com.sissi.pipeline.in.iq.muc.MucCheckLoopProcessor" parent="global.pro.proxy">
		<property name="relationContext" ref="ucenter.muc" />
	</bean>
	<bean id="muc.pro.check.exists" class="com.sissi.pipeline.in.iq.muc.MucCheckExistsProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.config.builder" />
	</bean>
	<bean id="muc.pro.check.conflict" class="com.sissi.pipeline.in.iq.muc.MucCheckConflictProcessor" />
	<bean id="muc.pro.check.relation.role.4self" class="com.sissi.pipeline.in.iq.muc.MucCheckRelationRole4SelfProcessor" parent="global.pro.proxy">
		<property name="relationContext" ref="ucenter.muc" />
	</bean>
	<bean id="muc.pro.check.relation.role.4fans" class="com.sissi.pipeline.in.iq.muc.MucCheckRelationRole4FansProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc" />
		<property name="relationContext" ref="ucenter.muc" />
	</bean>
	<bean id="muc.pro.check.relation.affiliation.4self" class="com.sissi.pipeline.in.iq.muc.MucCheckRelationAffiliation4SelfProcessor" parent="global.pro.proxy">
		<property name="relationContext" ref="ucenter.muc" />
	</bean>
	<bean id="muc.pro.check.relation.affiliation.4fans" class="com.sissi.pipeline.in.iq.muc.MucCheckRelationAffiliation4FansProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.vcard" />
		<property name="relationContext" ref="ucenter.muc" />
	</bean>
	<bean id="muc.pro.check.relation.affiliation.owner" class="com.sissi.pipeline.in.iq.muc.MucCheckRelationAffiliationOwnerProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.4affiliation" />
	</bean>
	<bean id="muc.pro.set.role.broadcast" class="com.sissi.pipeline.in.iq.muc.MucSetBroadcastRoleProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc" />
		<constructor-arg ref="ucenter.muc.judger" />
		<constructor-arg ref="ucenter.muc.config.builder" />
		<property name="relationContext" ref="ucenter.muc" />
	</bean>
	<bean id="muc.pro.set.role" class="com.sissi.pipeline.in.iq.muc.MucSetRoleProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.role" />
	</bean>
	<bean id="muc.pro.set.role.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="muc.pro.check.loop" />
				<ref bean="muc.pro.check.exists" />
				<ref bean="muc.pro.check.conflict" />
				<ref bean="muc.pro.check.relation.role.4self" />
				<ref bean="muc.pro.check.relation.role.4fans" />
				<ref bean="muc.pro.set.role.broadcast" />
				<ref bean="muc.pro.set.role" />
				<ref bean="muc.pro" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="muc.pro.set.affiliation.broadcast" class="com.sissi.pipeline.in.iq.muc.MucSetBroadcastAffiliationProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.broadcast" />
		<constructor-arg ref="ucenter.muc.config.builder" />
	</bean>
	<bean id="muc.pro.set.affiliation" class="com.sissi.pipeline.in.iq.muc.MucSetAffiliationProcessor" parent="global.pro.proxy">
		<property name="relationContext" ref="ucenter.muc.4affiliation" />
	</bean>
	<bean id="muc.pro.set.affiliation.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="muc.pro.check.jid" />
				<!-- <ref bean="muc.pro.check.loop" /> -->
				<ref bean="muc.pro.check.exists" />
				<ref bean="muc.pro.check.conflict" />
				<ref bean="muc.pro.check.relation.affiliation.4self" />
				<ref bean="muc.pro.check.relation.affiliation.4fans" />
				<ref bean="muc.pro.check.relation.affiliation.owner" />
				<ref bean="muc.pro.set.affiliation.broadcast" />
				<ref bean="muc.pro.set.affiliation" />
				<ref bean="muc.pro" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="muc.pro.get.role" class="com.sissi.pipeline.in.iq.muc.MucGetRoleProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc" />
		<constructor-arg ref="ucenter.muc.config.builder" />
	</bean>
	<bean id="muc.pro.get.role.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="muc.pro.check.loop" />
				<ref bean="muc.pro.check.exists" />
				<ref bean="muc.pro.check.relation.role.4self" />
				<ref bean="muc.pro.get.role" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="muc.pro.get.affiliation" class="com.sissi.pipeline.in.iq.muc.MucGetAffiliationProcessor" parent="global.pro.proxy">
		<constructor-arg ref="ucenter.muc.4affiliation" />
	</bean>
	<bean id="muc.pro.get.affiliation.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="muc.pro.check.loop" />
				<ref bean="muc.pro.check.exists" />
				<ref bean="muc.pro.check.relation.affiliation.4self" />
				<ref bean="muc.pro.get.affiliation" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="muc.pro.fork" class="com.sissi.pipeline.in.ForkProcessor">
		<constructor-arg ref="finder.muc" />
	</bean>
	<bean id="muc.pro.fork.set" class="com.sissi.pipeline.in.ForkProcessor">
		<constructor-arg ref="finder.muc.set" />
	</bean>
	<bean id="muc.pro.fork.get" class="com.sissi.pipeline.in.ForkProcessor">
		<constructor-arg ref="finder.muc.get" />
	</bean>

	<bean id="finder.muc" class="com.sissi.pipeline.in.ChainedFinder">
		<constructor-arg>
			<util:list>
				<ref bean="muc.pro.condition.set" />
				<ref bean="muc.pro.condition.get" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="finder.muc.set" class="com.sissi.pipeline.in.ChainedFinder">
		<constructor-arg>
			<util:list>
				<ref bean="muc.pro.condition.set.role" />
				<ref bean="muc.pro.condition.set.affiliation" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="finder.muc.get" class="com.sissi.pipeline.in.ChainedFinder">
		<constructor-arg>
			<util:list>
				<ref bean="muc.pro.condition.get.role" />
				<ref bean="muc.pro.condition.get.affiliation" />
			</util:list>
		</constructor-arg>
	</bean>

	<bean id="muc.pro.condition" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.ClassMatcher">
				<constructor-arg value="com.sissi.protocol.muc.XMucAdmin" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="muc.pro.fork" />
	</bean>
	<bean id="muc.pro.condition.set" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.iq.muc.MucSetMatcher">
				<constructor-arg ref="global.jid" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="muc.pro.fork.set" />
	</bean>
	<bean id="muc.pro.condition.set.role" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.iq.muc.MucActionMatcher">
				<constructor-arg ref="global.jid" />
				<constructor-arg index="1" value="ROLE" />
				<constructor-arg index="2" value="SET" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="muc.pro.set.role.chained" />
	</bean>
	<bean id="muc.pro.condition.set.affiliation" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.iq.muc.MucActionMatcher">
				<constructor-arg ref="global.jid" />
				<constructor-arg index="1" value="AFFILIATION" />
				<constructor-arg index="2" value="SET" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="muc.pro.set.affiliation.chained" />
	</bean>
	<bean id="muc.pro.condition.get" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.iq.muc.MucGetMatcher">
				<constructor-arg ref="global.jid" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="muc.pro.fork.get" />
	</bean>
	<bean id="muc.pro.condition.get.role" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.iq.muc.MucActionMatcher">
				<constructor-arg ref="global.jid" />
				<constructor-arg index="1" value="ROLE" />
				<constructor-arg index="2" value="GET" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="muc.pro.get.role.chained" />
	</bean>
	<bean id="muc.pro.condition.get.affiliation" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.iq.muc.MucActionMatcher">
				<constructor-arg ref="global.jid" />
				<constructor-arg index="1" value="AFFILIATION" />
				<constructor-arg index="2" value="GET" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="muc.pro.get.affiliation.chained" />
	</bean>
</beans>
