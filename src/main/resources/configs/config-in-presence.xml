<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<bean id="presence.pro.check.binding" class="com.sissi.pipeline.in.presence.PresenceCheckBindingProcessor" />
	<bean id="presence.pro.fork" class="com.sissi.pipeline.in.ForkProcessor">
		<constructor-arg ref="finder.presence" />
	</bean>
	<bean id="presence.pro.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="presence.pro.check.binding" />
				<ref bean="presence.pro.fork" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="presence.pro.roster.fork" class="com.sissi.pipeline.in.ForkProcessor">
		<constructor-arg ref="finder.presence.roster" />
	</bean>
	<bean id="presence.pro.status.2self.priority" class="com.sissi.pipeline.in.presence.status.PresenceStatusPriorityProcessor">
		<constructor-arg ref="addressing" />
	</bean>
	<bean id="presence.pro.status.2self.update" class="com.sissi.pipeline.in.presence.status.PresenceStatusUpdateProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.status.2selfs" class="com.sissi.pipeline.in.presence.status.PresenceStatus2SelfsProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.status.2fans" class="com.sissi.pipeline.in.presence.status.PresenceStatus2FansProcessor" parent="global.pro.proxy">
		<property name="protocolQueue" ref="broadcast.protocol.fans" />
	</bean>
	<bean id="presence.pro.status.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="presence.pro.status.2self.priority" />
				<ref bean="presence.pro.status.2self.update" />
				<ref bean="presence.pro.status.2fans" />
				<ref bean="presence.pro.status.2selfs" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="presence.pro.roster.subscribe" class="com.sissi.pipeline.in.presence.roster.PresenceRosterSubscribeProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.subscribe.validate" class="com.sissi.pipeline.in.presence.roster.PresenceRosterSubscribeValidateProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.subscribe.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="presence.pro.roster.subscribe.validate" />
				<ref bean="presence.pro.roster.subscribe" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="presence.pro.roster.unsubscribed" class="com.sissi.pipeline.in.presence.roster.PresenceRosterUnSubscribedProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.unsubscribed.2master.item" class="com.sissi.pipeline.in.presence.roster.PresenceRosterUnSubscribed2MasterItemProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.unsubscribed.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="presence.pro.roster.unsubscribed" />
				<ref bean="presence.pro.roster.unsubscribed.2master.item" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="presence.pro.roster.subscribed" class="com.sissi.pipeline.in.presence.roster.PresenceRosterSubscribedProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.subscribed.validate" class="com.sissi.pipeline.in.presence.roster.PresenceRosterSubscribedValidateProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.subscribed.2master.item" class="com.sissi.pipeline.in.presence.roster.PresenceRosterSubscribed2MasterItemProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.subscribed.2master.presence" class="com.sissi.pipeline.in.presence.roster.PresenceRosterSubscribed2MasterPresenceProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.subscribed.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="presence.pro.roster.subscribed.validate" />
				<ref bean="presence.pro.roster.subscribed" />
				<ref bean="presence.pro.roster.subscribed.2master.item" />
				<ref bean="presence.pro.roster.subscribed.2master.presence" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="presence.pro.roster.unsubscribe" class="com.sissi.pipeline.in.presence.roster.PresenceRosterUnSubscribeProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.unsubscribe.2master.item" class="com.sissi.pipeline.in.presence.roster.PresenceRosterUnSubscribe2MasterItemProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.unsubscribe.2master.presence" class="com.sissi.pipeline.in.presence.roster.PresenceRosterUnSubscribe2MasterPresenceProcessor" parent="global.pro.proxy" />
	<bean id="presence.pro.roster.unsubscribe.chained" class="com.sissi.pipeline.in.ChainedProcessor">
		<constructor-arg>
			<util:list>
				<ref bean="presence.pro.roster.unsubscribe.2master.item" />
				<ref bean="presence.pro.roster.unsubscribe.2master.presence" />
				<ref bean="presence.pro.roster.unsubscribe" />
			</util:list>
		</constructor-arg>
	</bean>

	<bean id="finder.presence" class="com.sissi.pipeline.in.ChainedFinder">
		<constructor-arg>
			<util:list>
				<ref bean="presence.condition.muc" />
				<ref bean="presence.condition.status" />
				<ref bean="presence.condition.roster" />
			</util:list>
		</constructor-arg>
	</bean>
	<bean id="finder.presence.roster" class="com.sissi.pipeline.in.ChainedFinder">
		<constructor-arg>
			<util:list>
				<ref bean="presence.condition.roster.subscribe" />
				<ref bean="presence.condition.roster.subscribed" />
				<ref bean="presence.condition.roster.unsubscribe" />
				<ref bean="presence.condition.roster.unsubscribed" />
			</util:list>
		</constructor-arg>
	</bean>

	<bean id="presence.condition" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.ClassMatcher">
				<constructor-arg value="com.sissi.protocol.presence.Presence" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="presence.pro.chained" />
	</bean>
	<bean id="presence.condition.status" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.presence.status.PresenceStatusMatcher" />
		</constructor-arg>
		<constructor-arg ref="presence.pro.status.chained" />
	</bean>
	<bean id="presence.condition.roster" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.AnyMatcher" />
		</constructor-arg>
		<constructor-arg ref="presence.pro.roster.fork" />
	</bean>
	<bean id="presence.condition.roster.unsubscribe" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.presence.roster.PresenceRosterActionMatcher">
				<constructor-arg value="unsubscribe" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="presence.pro.roster.unsubscribe.chained" />
	</bean>
	<bean id="presence.condition.roster.unsubscribed" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.presence.roster.PresenceRosterActionMatcher">
				<constructor-arg value="unsubscribed" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="presence.pro.roster.unsubscribed.chained" />
	</bean>
	<bean id="presence.condition.roster.subscribed" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.presence.roster.PresenceRosterActionMatcher">
				<constructor-arg value="subscribed" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="presence.pro.roster.subscribed.chained" />
	</bean>
	<bean id="presence.condition.roster.subscribe" class="com.sissi.pipeline.in.PairCondition">
		<constructor-arg>
			<bean class="com.sissi.pipeline.in.presence.roster.PresenceRosterActionMatcher">
				<constructor-arg value="subscribe" />
			</bean>
		</constructor-arg>
		<constructor-arg ref="presence.pro.roster.subscribe.chained" />
	</bean>

</beans>
