<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
	<bean id="relation.roster.inductor" class="com.sissi.ucenter.relation.roster.BroadcastRelationInductor">
		<constructor-arg ref="broadcast.protocol.selfs" />
		<constructor-arg>
			<bean class="com.sissi.protocol.iq.roster.Group">
				<constructor-arg value="${pipeline.roster.group.default}" />
			</bean>
		</constructor-arg>
		<property name="relationContext" ref="relation.roster" />
	</bean>

	<alias name="relation.roster.mongo" alias="relation.roster" />
	<bean id="relation.roster.mongo" class="com.sissi.ucenter.relation.roster.MongoRelationRosterContext">
		<constructor-arg ref="jid" />
		<constructor-arg value="${pipeline.roster.group.default}" />
		<constructor-arg>
			<bean class="com.sissi.config.impl.MongoProxyConfig">
				<constructor-arg ref="mongo" />
				<constructor-arg index="1" value="${mongo.db}" />
				<constructor-arg index="2" value="${mongo.collection.roster}" />
			</bean>
		</constructor-arg>
		<property name="relationInductor" ref="relation.roster.inductor" />
	</bean>
	
</beans>
